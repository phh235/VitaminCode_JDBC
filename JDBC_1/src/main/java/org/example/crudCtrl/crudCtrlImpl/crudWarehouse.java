package org.example.crudCtrl.crudCtrlImpl;import org.example.crudCtrl.crudCtrl;import org.example.dao.daoImpl.WarehouseDAO;import org.example.entity.Warehouse;import java.text.SimpleDateFormat;import java.util.List;import java.util.Optional;import java.util.Scanner;public class crudWarehouse implements crudCtrl {    WarehouseDAO warehouseDAO = new WarehouseDAO();    Scanner sc = new Scanner(System.in);    @Override    public void insert() {        try {            Warehouse warehouse = new Warehouse();            warehouse.input(sc);            warehouseDAO.create(warehouse);        } catch (Exception e) {            System.out.println("Lựa chọn không hợp lệ. Vui lòng thử lại.");        }    }    @Override    public void delete() {        try {            System.out.print("Nhập vào ID warehouse muốn xóa: ");            int id = sc.nextInt();            Optional<Warehouse> warehouse = warehouseDAO.findById(id);            if (warehouse.isPresent()) {                warehouseDAO.delete(id);            } else {                System.out.println("Warehouse không tồn tại.");            }        } catch (Exception e) {            System.out.println("Lựa chọn không hợp lệ. Vui lòng thử lại.");        }    }    @Override    public void update() {        try {            System.out.print("Nhập ID warehouse cần cập nhật: ");            int id = sc.nextInt();            sc.nextLine();            Optional<Warehouse> warehouse = warehouseDAO.findById(id);            if (warehouse.isPresent()) {                warehouse.get().input(sc);                warehouseDAO.update(warehouse.get());            } else {                System.out.println("Warehouse không tồn tại");            }        } catch (Exception e) {            System.out.println("Lựa chọn không hợp lệ. Vui lòng thử lại.");        }    }    @Override    public void read() {        List<Warehouse> list = warehouseDAO.findAll();        if (list.isEmpty()) {            System.out.println("Không tìm thấy warehouse.");            return;        }        // Header of the table        System.out.printf("%-5s %-20s %-10s %-15s %-15s %-30s\n",                "ID", "Name", "Active", "Created By", "Created", "Description");        System.out.println(                "--------------------------------------------------------------------------------------------------------");        // Data rows        for (Warehouse warehouse : list) {            System.out.printf("%-5d %-20s %-10b %-15s %-15s %-30s\n",                    warehouse.getId(),                    warehouse.getName(),                    warehouse.isActive(),                    warehouse.getCreatedBy(),                    (warehouse.getCreated() != null) ? new SimpleDateFormat("dd-MM-yyyy").format(warehouse.getCreated()) : "N/A",                    warehouse.getDescription());        }    }    public void findByName() {        try {            Scanner sc = new Scanner(System.in);            System.out.println("Nhập tên warehouse muốn tìm: ");            String name = sc.nextLine();            List<Warehouse> list =  warehouseDAO.findByName(name);            if (list != null) {                System.out.printf("%-5s %-20s %-10s %-15s %-15s %-30s\n",                        "ID", "Name", "Active", "Created By", "Created", "Description");                System.out.println(                        "--------------------------------------------------------------------------------------------------------");                for (Warehouse warehouse : list) {                    System.out.printf("%-5d %-20s %-10b %-15s %-15s %-30s\n",                            warehouse.getId(),                            warehouse.getName(),                            warehouse.isActive(),                            warehouse.getCreatedBy(),                            (warehouse.getCreated() != null) ? new SimpleDateFormat("dd-MM-yyyy").format(warehouse.getCreated()) : "N/A",                            warehouse.getDescription());                }            }else {                System.out.println("WareHouse does not exist");            }        }catch (Exception e) {            System.out.println("Invalid input. Please enter again.");        }    }}