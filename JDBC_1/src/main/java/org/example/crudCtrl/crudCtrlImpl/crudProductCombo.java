package org.example.crudCtrl.crudCtrlImpl;import org.example.crudCtrl.crudCtrl;import org.example.dao.daoImpl.ProductComboDAO;import org.example.entity.ProductCombo;import org.example.entity.ProductItem;import java.text.SimpleDateFormat;import java.util.List;import java.util.Scanner;public class crudProductCombo implements crudCtrl {    ProductComboDAO productComboDAO = new ProductComboDAO();    @Override    public void read() {        List<ProductCombo> list = productComboDAO.findAll();        if (list.isEmpty()) {            System.out.println("Không tìm thấy ProductCombo.");            return;        }        // Header of the table        System.out.printf("%-5s %-20s %-10s %-10s %-15s %-15s %-10s %-15s\n",                "ID", "Name", "Active", "Locator ID", "Created", "Created By", "Qty", "Parent ID");        System.out.println(                "-----------------------------------------------------------------------------------------------------------------------------");        // Data rows        for (ProductCombo productCombo : list) {            System.out.printf("%-5d %-20s %-10b %-10d %-15s %-15s %-10d\n",                    productCombo.getId(),                    productCombo.getName(),                    productCombo.getActive(),                    productCombo.getLocatorId(),                    (productCombo.getCreated() != null) ?                            new SimpleDateFormat("dd-MM-yyyy").format(productCombo.getCreated()) :                            "N/A",                    productCombo.getCreatedBy(),                    productCombo.getQtyStock(),                    productCombo.getProductParentId()            );        }    }    @Override    public void insert() {        try {            Scanner sc = new Scanner(System.in);            ProductCombo item = new ProductCombo();            item.input(sc);            productComboDAO.create(item);        } catch (Exception e) {            System.out.println("Lựa chọn không hợp lệ. Vui lòng thử lại.");        }    }    @Override    public void update() {        try {            Scanner sc = new Scanner(System.in);            ProductCombo item = new ProductCombo();            item.input(sc);            productComboDAO.update(item);        } catch (Exception e) {            System.out.println("Lựa chọn không hợp lệ. Vui lòng thử lại.");        }    }    @Override    public void delete() {        try {            ProductComboDAO productComboDAO = new ProductComboDAO();            Scanner sc = new Scanner(System.in);            System.out.println("Enter product ID");            int id = sc.nextInt();            productComboDAO.delete(id);            System.out.println("Deleted product with id " + id);        } catch (Exception e) {            System.out.println("delete failed");            e.printStackTrace();        }    }    public void getComboById() {        try {            Scanner sc = new Scanner(System.in);            System.out.println("Enter product ID");            int id = sc.nextInt();            List<ProductCombo> list = productComboDAO.getComboById(id);            if (list.size() > 0) {                for (ProductCombo ProductCombo : list) {                    System.out.println(ProductCombo);                }            } else {                System.out.println("no item found");            }        } catch (Exception e) {            System.out.println("Lựa chọn không hợp lệ. Vui lòng thử lại.");            e.printStackTrace();        }    }    public void sortAsc() {        List<ProductCombo> list = productComboDAO.getComboSortAsc();        if (list.size() > 0) {            for (ProductCombo productCombo : list) {                System.out.println(productCombo);            }        } else {            System.out.println("no item found");        }    }    public void sortDesc() {        List<ProductCombo> list = productComboDAO.getComboSortDesc();        if (list.size() > 0) {            for (ProductCombo productCombo : list) {                System.out.println(productCombo);            }        } else {            System.out.println("no item found");        }    }}